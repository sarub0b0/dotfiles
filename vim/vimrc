scriptencoding utf-8

if !has('nvim')
    if has('unix')
        " let $PYTHONHOME=$PYENV_ROOT . "/versions/2.7.14"
        " set pythondll=$PYTHONHOME/lib/libpython2.7.so
        " py import sys
        " let $PYTHONHOME=$PYENV_ROOT . "/versions/3.6.4"
        " set pythonthreedll=$PYTHONHOME/lib/libpython3.6m.so
        " py3 import sys
    else
        let $PYTHONHOME=$PYENV_ROOT . "/versions/2.7.14"
        set pythondll=$PYTHONHOME/lib/libpython2.7.dylib
        py import sys
        let $PYTHONHOME=$PYENV_ROOT . "/versions/3.6.4"
        set pythonthreedll=$PYTHONHOME/lib/libpython3.6m.dylib
        py3 import sys
    endif
endif


augroup MyAutoCmd
    autocmd!
augroup END

let g:python_host_prog = expand('$PYENV_ROOT/versions/2.7.14/bin/python')
let g:python3_host_prog = expand('$PYENV_ROOT/versions/3.6.4/bin/python')

let g:vim_home = expand('~/dotfiles/vim')
let g:rc_dir = expand('~/dotfiles/vim/rc')


" rcファイル読み込み関数
function! s:source_rc(rc_file_name)
    let l:rc_file = expand(g:rc_dir . '/' . a:rc_file_name)
    if filereadable(l:rc_file)
        execute 'source' l:rc_file
    endif
endfunction

augroup vimrc-local
    autocmd!
    autocmd BufNewFile,BufReadPost * call s:vimrc_local(expand('<afile>:p:h'))
augroup END

function! s:vimrc_local(loc)
    let l:files = findfile('.vimrc.local', escape(a:loc, ' ') . ';', -1)
    for l:i in reverse(filter(l:files, 'filereadable(v:val)'))
        source `=i`
    endfor
endfunction

if has('nvim')
    call s:source_rc('dein.rc.vim')
endif

call s:source_rc('editor.rc.vim')

call s:source_rc('clipboard.rc.vim')

call s:source_rc('color.rc.vim')

call s:source_rc('mappings.rc.vim')

call s:source_rc('filetypes.rc.vim')

call s:source_rc('windowctrl.rc.vim')

call s:source_rc('syntaxinfo.rc.vim')
" call s:source_rc('status_line.rc.vim')



