scriptencoding utf-8

if &compatible
    set nocompatible
endif

augroup MyAutoCmd
    autocmd!
augroup END

augroup MyAutoCmd
    autocmd!

    augroup DeleteLineEndSpaceCmd
        autocmd!
    augroup END
augroup END

if has('mac')
    let g:python_host_prog = expand('$PYENV_ROOT/versions/2.7.17/bin/python2')
    let g:python3_host_prog = expand('$PYENV_ROOT/versions/3.8.2/bin/python3')
else
    let g:python_host_prog = expand('$PYENV_ROOT/versions/2.7.17/bin/python')
    let g:python3_host_prog = expand('$PYENV_ROOT/versions/3.8.2/bin/python')
endif

let g:vim_home = expand('~/dotfiles/vim')
let g:rc_dir = expand('~/dotfiles/vim/rc')

" rcファイル読み込み関数
function! s:source_rc(rc_file_name)
    let l:rc_file = expand(g:rc_dir . '/' . a:rc_file_name)
    if filereadable(l:rc_file)
        execute 'source' l:rc_file
    endif
endfunction

autocmd MyAutoCmd BufNewFile,BufReadPost * call s:vimrc_local(expand('<afile>:p:h'))

function! s:vimrc_local(loc)
    let l:files = findfile('.vimrc.local', escape(a:loc, ' ') . ';', -1)
    for l:i in reverse(filter(l:files, 'filereadable(v:val)'))
        source `=i`
    endfor
endfunction

if has('nvim')
   call s:source_rc('dein.rc.vim')
endif

call s:source_rc('editor.rc.vim')

call s:source_rc('color.rc.vim')

call s:source_rc('syntax.rc.vim')

call s:source_rc('mappings.rc.vim')

call s:source_rc('filetypes.rc.vim')

call s:source_rc('windowctrl.rc.vim')
